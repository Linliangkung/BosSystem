<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:soap="http://cxf.apache.org/bindings/soap"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
	http://cxf.apache.org/bindings/soap 
	http://cxf.apache.org/schemas/configuration/soap.xsd
	http://cxf.apache.org/jaxws 
	http://cxf.apache.org/schemas/jaxws.xsd">


	<!-- 配置加载db.properties属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 基本配置信息 -->
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 配置LocalSessionFactoryBean,用于整合Hibernate框架 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate的基本属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 配置映射文件路径 -->
		<property name="mappingLocations">
			<list>
				<value>
					classpath:com/jsako/bos/domain/*.xml
				</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置shiro过滤器工厂-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器对象 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 注入相关页面访问url -->
		<property name="loginUrl" value="/login.jsp"></property>
		<property name="successUrl" value="/index.jsp"></property>
		<property name="unauthorizedUrl" value="/unauthorized.jsp"></property>
		<!-- 注入url拦截规则 -->
		<property name="filterChainDefinitions" >
			<value>
				/css/**=anon
				/js/**=anon
				/images/**=anon
				/easyui/**=anon
				/login.jsp*=anon
				/validatecode.jsp*=anon
				/userAction_login.action=anon
				/page_base_staff.action=perms["staff"]
				/page_base_region.action=perms["region"]
				/**=authc
			</value>
		</property>
	</bean>
		
	<!-- 配置shiro安全管理器 -->
	 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	 	<property name="realm" ref="bosRealm"></property>
	 	<property name="cacheManager" ref="ehCacheManager"/>
	 </bean>
	 
	 <!-- 配置shiro缓存管理器 -->
	<bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
	</bean>
	
	<!-- 注册realm -->
	<bean id="bosRealm" class="com.jsako.bos.realm.BOSRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="md5"></property>
			</bean>
		</property>
	</bean>
	
	<!-- 开启shiro的注解 -->
	<!-- 自动代理 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 使用cglib创建代理对象 -->
		<property name="proxyTargetClass" value="true"/>
	</bean>
	<!-- 配置切面类：即那些类需要被代理 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置使用注解方式管理事务 -->
	<tx:annotation-driven />

	<!-- 组件扫描(使用注解方式配置action、service、dao) -->
	<context:component-scan base-package="com.jsako.bos" />

	<!-- 配置开启spring的注解支持 -->
	<context:annotation-config />
	
	<!-- 配置crm服务的客户端代理对象 -->
	<jaxws:client id="customerService"
		address="http://localhost/crmbos/service/customer"
		serviceClass="com.jsako.crmbos.service.impl.ICustomerService"
	/>
</beans>